DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS film CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS film_mpa CASCADE;

CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
	NAME VARCHAR_IGNORECASE,
	ID INTEGER NOT NULL AUTO_INCREMENT,
	CONSTRAINT MPA_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	NAME VARCHAR_IGNORECASE,
	DESCRIPTION VARCHAR_IGNORECASE,
	RELEASEDATE DATE,
	DURATION INTEGER,
	ID INTEGER NOT NULL AUTO_INCREMENT,
	MPA_ID INTEGER,
	GENRES INTEGER,
	FOREIGN KEY (mpa_id) REFERENCES mpa (id) ON DELETE CASCADE,
	CONSTRAINT FILM_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FRIENDS_ID BIGINT,
	EMAIL VARCHAR_IGNORECASE NOT NULL,
	LOGIN VARCHAR_IGNORECASE NOT NULL,
	BIRTHDAY DATE,
	USERNAME VARCHAR_IGNORECASE,
	CONSTRAINT USERS_PK PRIMARY KEY (ID),
	CONSTRAINT USERS_UNIQUE UNIQUE (EMAIL)
);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
	FILM_ID INTEGER,
	USER_ID INTEGER,
    FOREIGN KEY (film_id) REFERENCES film (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRES (
	GENRE_ID INTEGER,
	FILM_ID INTEGER,
    FOREIGN KEY (genre_id) REFERENCES genres (genre_id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES film (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_MPA (
	FILM_ID INTEGER,
	MPA_ID INTEGER
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIP (
	FRIENDSHIP_ID INTEGER NOT NULL AUTO_INCREMENT,
	USER1_ID INTEGER,
	USER2_ID INTEGER,
	STATUS VARCHAR_IGNORECASE,
	FOREIGN KEY (user1_id) REFERENCES users (id) ON DELETE CASCADE,
	CONSTRAINT FRIENDSHIP_PK PRIMARY KEY (FRIENDSHIP_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRES (
	NAME VARCHAR_IGNORECASE,
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	CONSTRAINT GENRES_PK PRIMARY KEY (GENRE_ID)

);


